Traceback (most recent call last):
  File "birthday-bot.py", line 18, in <module>
    key_file = open('./discord_key.txt', 'r')
FileNotFoundError: [Errno 2] No such file or directory: './discord_key.txt'
Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x7fd7f1a92198>
Task exception was never retrieved
future: <Task finished coro=<check_birthdays() done, defined at birthday-bot.py:32> exception=AttributeError("'NoneType' object has no attribute 'roles'",)>
Traceback (most recent call last):
  File "birthday-bot.py", line 36, in check_birthdays
    role = discord.utils.get(server.roles, name='Birthday')
AttributeError: 'NoneType' object has no attribute 'roles'
Logged in as Birthday Bot (ID:435284953538756619) | Connected to 1 servers | Connected to 9 users
--------
Use this link to invite Birthday Bot:
https://discordapp.com/oauth3/authorize?client_id=435284953538756619&scope=bot&permissions=8
Task exception was never retrieved
future: <Task finished coro=<check_birthdays() done, defined at birthday-bot.py:32> exception=AttributeError("'NoneType' object has no attribute 'roles'",)>
Traceback (most recent call last):
  File "birthday-bot.py", line 36, in check_birthdays
    role = discord.utils.get(server.roles, name='Birthday')
AttributeError: 'NoneType' object has no attribute 'roles'
Logged in as Birthday Bot (ID:435284953538756619) | Connected to 1 servers | Connected to 9 users
--------
Use this link to invite Birthday Bot:
https://discordapp.com/oauth3/authorize?client_id=435284953538756619&scope=bot
Added row (17-04, 116925401179226119)
Logged in as Birthday Bot (ID:435284953538756619) | Connected to 2 servers | Connected to 748 users
--------
Use this link to invite Birthday Bot:
https://discordapp.com/oauth2/authorize?client_id=435284953538756619&scope=bot
Task exception was never retrieved
future: <Task finished coro=<check_birthdays() done, defined at birthday-bot.py:32> exception=Forbidden('FORBIDDEN (status code: 403): Missing Permissions',)>
Traceback (most recent call last):
  File "birthday-bot.py", line 55, in check_birthdays
    await client.add_roles(member, role)
  File "/usr/local/lib/python3.6/site-packages/discord/client.py", line 2916, in add_roles
    yield from self._replace_roles(member, new_roles)
  File "/usr/local/lib/python3.6/site-packages/discord/client.py", line 2887, in _replace_roles
    yield from self.http.replace_roles(member.id, member.server.id, roles)
  File "/usr/local/lib/python3.6/site-packages/discord/http.py", line 196, in request
    raise Forbidden(r, data)
discord.errors.Forbidden: FORBIDDEN (status code: 403): Missing Permissions
Birthday changed to 17-04
Added row (17-04, 118434475183964163)
Birthday changed to 17-04
Logged in as Birthday Bot (ID:435284953538756619) | Connected to 1 servers | Connected to 747 users
--------
Use this link to invite Birthday Bot:
https://discordapp.com/oauth2/authorize?client_id=435284953538756619&scope=bot
Added role for iggnore on 17-04
Added role for kuh_ruhpt on 17-04
Removed role from kuh_ruhpt on 17-04
Removed role from iggnore on 17-04
Added role for iggnore on 17-04
Added role for kuh_ruhpt on 17-04
Removed role from kuh_ruhpt on 17-04
Removed role from iggnore on 17-04
Added role for iggnore on 17-04
Added role for kuh_ruhpt on 17-04
Logged in as Birthday Bot (ID:435284953538756619) | Connected to 1 servers | Connected to 747 users
--------
Use this link to invite Birthday Bot:
https://discordapp.com/oauth2/authorize?client_id=435284953538756619&scope=bot
Removed role from kuh_ruhpt on 17-04
Removed role from iggnore on 17-04
Added role for iggnore on 17-04
Added role for kuh_ruhpt on 17-04
Birthday changed to 22-07
Birthday changed to 06-08
Added row (19-05, 289388162030108672)
Added row (10-11, 288774072593285120)
Added row (27-11, 237605774476574720)
Added row (08-04, 229869533458857984)
Added row (23-08, 179283802076610560)
Added row (23-08, 257582690444902400)
Added row (15-07, 168333312836763649)
Added row (10-05, 199561432411406336)
Logged in as Birthday Bot (ID:435284953538756619) | Connected to 1 servers | Connected to 753 users
--------
Use this link to invite Birthday Bot:
https://discordapp.com/oauth2/authorize?client_id=435284953538756619&scope=bot
Added row (25-09, 185454736726687745)
Added row (12-08, 181091148025036800)
Added row (17-11, 212876376179474432)
Logged in as Birthday Bot (ID:435284953538756619) | Connected to 1 servers | Connected to 761 users
--------
Use this link to invite Birthday Bot:
https://discordapp.com/oauth2/authorize?client_id=435284953538756619&scope=bot
Task exception was never retrieved
future: <Task finished coro=<WebSocketCommonProtocol.run() done, defined at /usr/local/lib64/python3.6/site-packages/websockets/protocol.py:428> exception=ConnectionResetError(104, 'Connection reset by peer')>
Traceback (most recent call last):
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 434, in run
    msg = yield from self.read_message()
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 456, in read_message
    frame = yield from self.read_data_frame(max_size=self.max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 511, in read_data_frame
    frame = yield from self.read_frame(max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 546, in read_frame
    self.reader.readexactly, is_masked, max_size=max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/framing.py", line 86, in read_frame
    data = yield from reader(2)
  File "/usr/lib64/python3.6/asyncio/streams.py", line 668, in readexactly
    yield from self._wait_for_data('readexactly')
  File "/usr/lib64/python3.6/asyncio/streams.py", line 458, in _wait_for_data
    yield from self._waiter
  File "/usr/lib64/python3.6/asyncio/selector_events.py", line 724, in _read_ready
    data = self._sock.recv(self.max_size)
ConnectionResetError: [Errno 104] Connection reset by peer
Added role for reQunix on 10-05
Birthday changed to 22-07
Birthday changed to 08-04
Added row (08-07, 227447513701941248)
Removed role from reQunix on 11-05
Task exception was never retrieved
future: <Task finished coro=<WebSocketCommonProtocol.run() done, defined at /usr/local/lib64/python3.6/site-packages/websockets/protocol.py:428> exception=ConnectionResetError(104, 'Connection reset by peer')>
Traceback (most recent call last):
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 434, in run
    msg = yield from self.read_message()
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 456, in read_message
    frame = yield from self.read_data_frame(max_size=self.max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 511, in read_data_frame
    frame = yield from self.read_frame(max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 546, in read_frame
    self.reader.readexactly, is_masked, max_size=max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/framing.py", line 86, in read_frame
    data = yield from reader(2)
  File "/usr/lib64/python3.6/asyncio/streams.py", line 668, in readexactly
    yield from self._wait_for_data('readexactly')
  File "/usr/lib64/python3.6/asyncio/streams.py", line 458, in _wait_for_data
    yield from self._waiter
  File "/usr/lib64/python3.6/asyncio/selector_events.py", line 724, in _read_ready
    data = self._sock.recv(self.max_size)
ConnectionResetError: [Errno 104] Connection reset by peer
Task exception was never retrieved
future: <Task finished coro=<WebSocketCommonProtocol.run() done, defined at /usr/local/lib64/python3.6/site-packages/websockets/protocol.py:428> exception=ConnectionResetError(104, 'Connection reset by peer')>
Traceback (most recent call last):
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 434, in run
    msg = yield from self.read_message()
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 456, in read_message
    frame = yield from self.read_data_frame(max_size=self.max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 511, in read_data_frame
    frame = yield from self.read_frame(max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 546, in read_frame
    self.reader.readexactly, is_masked, max_size=max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/framing.py", line 86, in read_frame
    data = yield from reader(2)
  File "/usr/lib64/python3.6/asyncio/streams.py", line 668, in readexactly
    yield from self._wait_for_data('readexactly')
  File "/usr/lib64/python3.6/asyncio/streams.py", line 458, in _wait_for_data
    yield from self._waiter
  File "/usr/lib64/python3.6/asyncio/selector_events.py", line 724, in _read_ready
    data = self._sock.recv(self.max_size)
ConnectionResetError: [Errno 104] Connection reset by peer
Task exception was never retrieved
future: <Task finished coro=<WebSocketCommonProtocol.run() done, defined at /usr/local/lib64/python3.6/site-packages/websockets/protocol.py:428> exception=ConnectionResetError(104, 'Connection reset by peer')>
Traceback (most recent call last):
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 434, in run
    msg = yield from self.read_message()
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 456, in read_message
    frame = yield from self.read_data_frame(max_size=self.max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 511, in read_data_frame
    frame = yield from self.read_frame(max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 546, in read_frame
    self.reader.readexactly, is_masked, max_size=max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/framing.py", line 86, in read_frame
    data = yield from reader(2)
  File "/usr/lib64/python3.6/asyncio/streams.py", line 668, in readexactly
    yield from self._wait_for_data('readexactly')
  File "/usr/lib64/python3.6/asyncio/streams.py", line 458, in _wait_for_data
    yield from self._waiter
  File "/usr/lib64/python3.6/asyncio/selector_events.py", line 724, in _read_ready
    data = self._sock.recv(self.max_size)
ConnectionResetError: [Errno 104] Connection reset by peer
Traceback (most recent call last):
  File "/usr/lib64/python3.6/asyncio/selector_events.py", line 724, in _read_ready
    data = self._sock.recv(self.max_size)
ConnectionResetError: [Errno 104] Connection reset by peer

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/aiohttp/client.py", line 202, in _request
    yield from resp.start(conn, read_until_eof)
  File "/usr/local/lib/python3.6/site-packages/aiohttp/client_reqrep.py", line 640, in start
    message = yield from httpstream.read()
  File "/usr/local/lib/python3.6/site-packages/aiohttp/streams.py", line 641, in read
    result = yield from super().read()
  File "/usr/local/lib/python3.6/site-packages/aiohttp/streams.py", line 476, in read
    yield from self._waiter
aiohttp.errors.ServerDisconnectedError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "birthday-bot.py", line 103, in <module>
    client.run(str(api_key)) # Send API key from opened file
  File "/usr/local/lib/python3.6/site-packages/discord/client.py", line 519, in run
    self.loop.run_until_complete(self.start(*args, **kwargs))
  File "/usr/lib64/python3.6/asyncio/base_events.py", line 467, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.6/site-packages/discord/client.py", line 491, in start
    yield from self.connect()
  File "/usr/local/lib/python3.6/site-packages/discord/client.py", line 452, in connect
    self.ws = yield from DiscordWebSocket.from_client(self, resume=resume)
  File "/usr/local/lib/python3.6/site-packages/discord/gateway.py", line 203, in from_client
    gateway = yield from client.http.get_gateway()
  File "/usr/local/lib/python3.6/site-packages/discord/http.py", line 633, in get_gateway
    data = yield from self.request(Route('GET', '/gateway'))
  File "/usr/local/lib/python3.6/site-packages/discord/http.py", line 137, in request
    r = yield from self.session.request(method, url, **kwargs)
  File "/usr/local/lib/python3.6/site-packages/aiohttp/client.py", line 555, in __iter__
    resp = yield from self._coro
  File "/usr/local/lib/python3.6/site-packages/aiohttp/client.py", line 209, in _request
    raise aiohttp.ClientResponseError() from exc
aiohttp.errors.ClientResponseError
Task was destroyed but it is pending!
task: <Task pending coro=<check_birthdays() running at birthday-bot.py:59> wait_for=<Future pending cb=[<TaskWakeupMethWrapper object at 0x7f61af401588>()]>>
Task exception was never retrieved
future: <Task finished coro=<WebSocketCommonProtocol.run() done, defined at /usr/local/lib64/python3.6/site-packages/websockets/protocol.py:428> exception=ConnectionResetError(104, 'Connection reset by peer')>
Traceback (most recent call last):
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 434, in run
    msg = yield from self.read_message()
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 456, in read_message
    frame = yield from self.read_data_frame(max_size=self.max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 511, in read_data_frame
    frame = yield from self.read_frame(max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 546, in read_frame
    self.reader.readexactly, is_masked, max_size=max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/framing.py", line 86, in read_frame
    data = yield from reader(2)
  File "/usr/lib64/python3.6/asyncio/streams.py", line 668, in readexactly
    yield from self._wait_for_data('readexactly')
  File "/usr/lib64/python3.6/asyncio/streams.py", line 458, in _wait_for_data
    yield from self._waiter
  File "/usr/lib64/python3.6/asyncio/selector_events.py", line 724, in _read_ready
    data = self._sock.recv(self.max_size)
ConnectionResetError: [Errno 104] Connection reset by peer
Task exception was never retrieved
future: <Task finished coro=<WebSocketCommonProtocol.run() done, defined at /usr/local/lib64/python3.6/site-packages/websockets/protocol.py:428> exception=ConnectionResetError(104, 'Connection reset by peer')>
Traceback (most recent call last):
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 434, in run
    msg = yield from self.read_message()
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 456, in read_message
    frame = yield from self.read_data_frame(max_size=self.max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 511, in read_data_frame
    frame = yield from self.read_frame(max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 546, in read_frame
    self.reader.readexactly, is_masked, max_size=max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/framing.py", line 86, in read_frame
    data = yield from reader(2)
  File "/usr/lib64/python3.6/asyncio/streams.py", line 668, in readexactly
    yield from self._wait_for_data('readexactly')
  File "/usr/lib64/python3.6/asyncio/streams.py", line 458, in _wait_for_data
    yield from self._waiter
  File "/usr/lib64/python3.6/asyncio/selector_events.py", line 724, in _read_ready
    data = self._sock.recv(self.max_size)
ConnectionResetError: [Errno 104] Connection reset by peer
Task exception was never retrieved
future: <Task finished coro=<WebSocketCommonProtocol.run() done, defined at /usr/local/lib64/python3.6/site-packages/websockets/protocol.py:428> exception=ConnectionResetError(104, 'Connection reset by peer')>
Traceback (most recent call last):
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 434, in run
    msg = yield from self.read_message()
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 456, in read_message
    frame = yield from self.read_data_frame(max_size=self.max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 511, in read_data_frame
    frame = yield from self.read_frame(max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 546, in read_frame
    self.reader.readexactly, is_masked, max_size=max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/framing.py", line 86, in read_frame
    data = yield from reader(2)
  File "/usr/lib64/python3.6/asyncio/streams.py", line 668, in readexactly
    yield from self._wait_for_data('readexactly')
  File "/usr/lib64/python3.6/asyncio/streams.py", line 458, in _wait_for_data
    yield from self._waiter
  File "/usr/lib64/python3.6/asyncio/selector_events.py", line 724, in _read_ready
    data = self._sock.recv(self.max_size)
ConnectionResetError: [Errno 104] Connection reset by peer
Task exception was never retrieved
future: <Task finished coro=<WebSocketCommonProtocol.run() done, defined at /usr/local/lib64/python3.6/site-packages/websockets/protocol.py:428> exception=ConnectionResetError(104, 'Connection reset by peer')>
Traceback (most recent call last):
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 434, in run
    msg = yield from self.read_message()
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 456, in read_message
    frame = yield from self.read_data_frame(max_size=self.max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 511, in read_data_frame
    frame = yield from self.read_frame(max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 546, in read_frame
    self.reader.readexactly, is_masked, max_size=max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/framing.py", line 86, in read_frame
    data = yield from reader(2)
  File "/usr/lib64/python3.6/asyncio/streams.py", line 668, in readexactly
    yield from self._wait_for_data('readexactly')
  File "/usr/lib64/python3.6/asyncio/streams.py", line 458, in _wait_for_data
    yield from self._waiter
  File "/usr/lib64/python3.6/asyncio/selector_events.py", line 724, in _read_ready
    data = self._sock.recv(self.max_size)
ConnectionResetError: [Errno 104] Connection reset by peer
Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x7f61c4c3c160>
Task exception was never retrieved
future: <Task finished coro=<WebSocketCommonProtocol.run() done, defined at /usr/local/lib64/python3.6/site-packages/websockets/protocol.py:428> exception=ConnectionResetError(104, 'Connection reset by peer')>
Traceback (most recent call last):
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 434, in run
    msg = yield from self.read_message()
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 456, in read_message
    frame = yield from self.read_data_frame(max_size=self.max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 511, in read_data_frame
    frame = yield from self.read_frame(max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/protocol.py", line 546, in read_frame
    self.reader.readexactly, is_masked, max_size=max_size)
  File "/usr/local/lib64/python3.6/site-packages/websockets/framing.py", line 86, in read_frame
    data = yield from reader(2)
  File "/usr/lib64/python3.6/asyncio/streams.py", line 668, in readexactly
    yield from self._wait_for_data('readexactly')
  File "/usr/lib64/python3.6/asyncio/streams.py", line 458, in _wait_for_data
    yield from self._waiter
  File "/usr/lib64/python3.6/asyncio/selector_events.py", line 724, in _read_ready
    data = self._sock.recv(self.max_size)
ConnectionResetError: [Errno 104] Connection reset by peer
